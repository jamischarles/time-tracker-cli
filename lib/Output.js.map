{"version":3,"sources":["../src/Output.js"],"names":["sumarize","search","tasks","rate","full","table","head","chars","colAligns","style","total","map","task","index","duration","stop","diff","start","outputDuration","name","startTime","format","stopTime","push","console","log","toString","table2"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AAEO,IAAMA,8BAAW,SAAXA,QAAW,CAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,IAA9B,EAAoC;AACxD,QAAIC,QAAQ,uBAAU;AAClBC,cAAM,CAAC,UAAD,EAAa,OAAb,EAAsB,MAAtB,CADY;AAElBC,eAAO,EAAC,OAAO,EAAR,EAAY,YAAY,EAAxB,EAA4B,WAAW,EAAvC,EAA2C,aAAa,EAAxD,EAFW;AAGlBC,mBAAW,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAHO;AAIlBC,eAAO,EAAEH,MAAM,CAAC,OAAD,CAAR;AAJW,KAAV,CAAZ;AAMA,QAAII,QAAQ,CAAZ;AACA,QAAIJ,oBAAiBL,MAAjB,QAAJ;;AAEAC,UAAMS,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP,EAAe;AACrB,YAAIC,WAAW,sBAAOF,KAAKA,IAAL,CAAUG,IAAjB,EAAuBC,IAAvB,CAA4B,sBAAOJ,KAAKA,IAAL,CAAUK,KAAjB,CAA5B,EAAqD,SAArD,CAAf;AACAP,iBAASI,QAAT;;AAEA,YAAII,iBAAiB,2BAAeJ,QAAf,CAArB;;AAEA,YAAIK,OAAOP,KAAKO,IAAhB;AACA,YAAIC,YAAY,sBAAOR,KAAKA,IAAL,CAAUK,KAAjB,EAAwBI,MAAxB,CAA+B,YAA/B,CAAhB;AACA,YAAIC,WAAW,sBAAOV,KAAKA,IAAL,CAAUG,IAAjB,EAAuBM,MAAvB,CAA8B,YAA9B,CAAf;AACA,YAAID,cAAcE,QAAlB,EAA2B;AACvBF,wBAAY,sBAAOR,KAAKA,IAAL,CAAUK,KAAjB,EAAwBI,MAAxB,CAA+B,OAA/B,IAA0C,GAA1C,GAAgD,sBAAOT,KAAKA,IAAL,CAAUG,IAAjB,EAAuBM,MAAvB,CAA8B,YAA9B,CAA5D;AACH;AACDhB,cAAMkB,IAAN,CAAW,CAACL,cAAD,EAAiBE,SAAjB,EAA4BD,IAA5B,CAAX;AACH,KAbD;;AAeAK,YAAQC,GAAR,CAAYpB,MAAMqB,QAAN,EAAZ;;AAEA,QAAItB,IAAJ,EAAS;AACL,YAAIuB,SAAS,wBAAb;AACAA,eAAOJ,IAAP,CACI,EAAE,UAAU,CAAC,OAAOtB,MAAP,GAAgB,IAAjB,CAAZ,EADJ,EAEI,EAAE,cAAc,CAAC,2BAAeS,KAAf,CAAD,CAAhB,EAFJ,EAGI,EAAE,iBAAiB,CAAC,uBAAWA,KAAX,CAAD,IAAsB,GAAzC,EAHJ;;AAMA,YAAIP,IAAJ,EAAS;AACLwB,mBAAOJ,IAAP,CAAY,EAAE,QAAQ,CAAC,qBAASpB,IAAT,EAAeO,KAAf,CAAD,CAAV,EAAZ;AACH;;AAEDc,gBAAQC,GAAR,CAAYE,OAAOD,QAAP,EAAZ;AACH;AACJ,CAzCM","file":"Output.js","sourcesContent":["import moment from 'moment'\nimport Table from 'cli-table'\n\nimport {getMinutes, humanParseDiff, recognizeModifierTiming, calcRate} from './Utils'\n\nexport const sumarize = function(search, tasks, rate, full) {\n    let table = new Table({\n        head: ['Duration', 'Dates', 'Task'],\n        chars: {'mid': '', 'left-mid': '', 'mid-mid': '', 'right-mid': ''},\n        colAligns: ['right', 'center', 'left'],\n        style: { head: ['green'] }\n    });\n    let total = 0\n    let head= `Search: ${search} \\n`\n\n    tasks.map((task, index)=>{\n        let duration = moment(task.task.stop).diff(moment(task.task.start), 'seconds')\n        total += duration\n\n        let outputDuration = humanParseDiff(duration)\n\n        let name = task.name\n        let startTime = moment(task.task.start).format('DD/MM/YYYY')\n        let stopTime = moment(task.task.stop).format('DD/MM/YYYY')\n        if (startTime !== stopTime){\n            startTime = moment(task.task.start).format('DD/MM') + '|' + moment(task.task.stop).format('DD/MM YYYY')\n        }\n        table.push([outputDuration, startTime, name])\n    })\n\n    console.log(table.toString());\n\n    if (full){\n        let table2 = new Table()\n        table2.push(\n            { 'Search': ['\\\"' + search + '\\\"'] },\n            { 'Total time': [humanParseDiff(total)] },\n            { 'Total minutes': [getMinutes(total)] + 'm' }\n        )\n\n        if (rate){\n            table2.push({ 'Rate': [calcRate(rate, total)] })\n        }\n\n        console.log(table2.toString());\n    }\n}\n"]}