{"version":3,"sources":["../src/Manager.js"],"names":["Manager","cfg","tasks","all","config","clear","name","set","obj","update","Object","assign","storeTasks","description","t","getTask","start","toDate","setTask","stop","diff","operation","stringTime","newStop","parsed","map","value","momentKey","isBefore","console","error","string","keys","key","indexOf","push","task","unflatten"],"mappings":";;;;;;;;;;;AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;;;IAEaA,O,WAAAA,O;AACT,qBAAYC,GAAZ,EAAiB;AAAA;;AACb,aAAKC,KAAL,GAAaD,IAAIE,GAAJ,CAAQD,KAArB;AACH;;AAED;;;;;qCACa;AACTE,mBAAOC,KAAP;AACA;AACH;;;gCAEOC,I,EAAM;AACV,mBAAQ,KAAKJ,KAAL,CAAWI,IAAX,CAAD,GAAqB,KAAKJ,KAAL,CAAWI,IAAX,CAArB,GAAwC,EAA/C;AACH;;;qCAEY;AACTF,mBAAOG,GAAP,CAAW,OAAX,EAAoB,KAAKL,KAAzB;AACH;;;gCAEOI,I,EAAME,G,EAAK;AACf,gBAAIC,SAAS,EAAb;AACAA,mBAAOH,IAAP,IAAeE,GAAf;AACA,iBAAKN,KAAL,GAAaQ,OAAOC,MAAP,CAAc,EAAd,EAAkB,KAAKT,KAAvB,EAA8BO,MAA9B,CAAb;AACA,iBAAKG,UAAL;AACH;;;8BAEKN,I,EAAMO,W,EAAa;AACrB,gBAAIC,IAAI,KAAKC,OAAL,CAAaT,IAAb,CAAR;AACA,gBAAI,CAACQ,EAAEE,KAAP,EAAc;AACVF,kBAAEE,KAAF,GAAU,wBAASC,MAAT,EAAV;AACA,oBAAIJ,WAAJ,EAAiBC,EAAED,WAAF,GAAgBA,WAAhB;AACjB,qBAAKK,OAAL,CAAaZ,IAAb,EAAmBQ,CAAnB;AACH;AACJ;;;6BAEIR,I,EAAMO,W,EAAa;AACpB,gBAAIC,IAAI,KAAKC,OAAL,CAAaT,IAAb,CAAR;AACA,gBAAI,CAACQ,EAAEK,IAAP,EAAa;AACTL,kBAAEK,IAAF,GAAS,wBAASF,MAAT,EAAT;AACA,oBAAIJ,WAAJ,EAAiBC,EAAED,WAAF,GAAgBA,WAAhB;AACjB,qBAAKK,OAAL,CAAaZ,IAAb,EAAmBQ,CAAnB;AACH;AACJ;;;gCAEOR,I,EAAM;AACV,gBAAIQ,IAAI,KAAKC,OAAL,CAAaT,IAAb,CAAR;AACA,gBAAIQ,EAAEK,IAAN,EAAY;AACR,uBAAO,sBAAOL,EAAEK,IAAT,EAAeC,IAAf,CAAoB,sBAAON,EAAEE,KAAT,CAApB,EAAqC,SAArC,CAAP;AACH,aAFD,MAEO;AACH,uBAAO,wBAASI,IAAT,CAAc,sBAAON,EAAEE,KAAT,CAAd,EAA+B,SAA/B,CAAP;AACH;AACJ;;;mCAEUK,S,EAAWf,I,EAAMgB,U,EAAW;AAAA;;AACnC,gBAAIR,IAAI,KAAKC,OAAL,CAAaT,IAAb,CAAR;;AAEA,gBAAIQ,EAAEK,IAAN,EAAW;AAAA;;AAEP,wBAAII,UAAU,sBAAOT,EAAEK,IAAT,CAAd;AACA,wBAAIK,SAAS,oCAAwBF,UAAxB,CAAb;AACAE,2BAAOC,GAAP,CAAW,UAACX,CAAD,EAAK;AACZS,kCAAUA,QAAQF,SAAR,EAAmBP,EAAEY,KAArB,EAA4BZ,EAAEa,SAA9B,CAAV;AACH,qBAFD;;AAIA,wBAAIN,cAAc,UAAd,IAA4BE,QAAQK,QAAR,CAAiBd,EAAEE,KAAnB,CAAhC,EAA0D;AACtDa,gCAAQC,KAAR,CAAc,6BAAd;AACA;AAAA;AAAA;AACH;;AAEDhB,sBAAEK,IAAF,GAASI,OAAT;AACA,0BAAKL,OAAL,CAAaZ,IAAb,EAAmBQ,CAAnB;AAdO;;AAAA;AAeV;;AAED,mBAAOA,EAAEK,IAAT;AACH;;;+BAEMY,M,EAAQ;AAAA;;AACX,gBAAIC,OAAOtB,OAAOsB,IAAP,CAAY,KAAK9B,KAAjB,CAAX;AACA,gBAAIA,QAAQ,EAAZ;AACA8B,iBAAKP,GAAL,CAAS,UAACQ,GAAD,EAAO;AACZ,oBAAIF,WAAW,KAAX,IAAoBE,IAAIC,OAAJ,CAAYH,MAAZ,IAAsB,CAAC,CAA/C,EAAiD;AAC7C7B,0BAAMiC,IAAN,CAAW;AACP7B,8BAAM2B,GADC;AAEPG,8BAAM,OAAKlC,KAAL,CAAW+B,GAAX;AAFC,qBAAX;AAIH;AACJ,aAPD;AAQA,mBAAO/B,KAAP;AACH;;;uCACc;AACX,mBAAO,eAAKmC,SAAL,CAAe,KAAKnC,KAApB,CAAP;AACH;;;;;;AAGL,IAAME,SAAS,0BAAgB,kBAAIE,IAApB,EAA0B,EAACJ,OAAM,EAAP,EAA1B,CAAf;;kBAEe,IAAIF,OAAJ,CAAYI,MAAZ,C","file":"Manager.js","sourcesContent":["import flat from 'flat'\n\nimport moment from 'moment'\nimport Configstore from 'configstore'\nimport pkg from '../package.json'\n\nimport {recognizeModifierTiming} from './Utils'\n\nexport class Manager {\n    constructor(cfg) {\n        this.tasks = cfg.all.tasks\n    }\n\n    // wipes the entire time store\n    clearStore() {\n        config.clear();\n        // config.all();\n    }\n\n    getTask(name) {\n        return (this.tasks[name]) ? this.tasks[name] : {}\n    }\n\n    storeTasks() {\n        config.set('tasks', this.tasks)\n    }\n\n    setTask(name, obj) {\n        let update = {}\n        update[name] = obj\n        this.tasks = Object.assign({}, this.tasks, update)\n        this.storeTasks()\n    }\n\n    start(name, description) {\n        let t = this.getTask(name)\n        if (!t.start) {\n            t.start = moment().toDate()\n            if (description) t.description = description\n            this.setTask(name, t)\n        }\n    }\n\n    stop(name, description) {\n        let t = this.getTask(name)\n        if (!t.stop) {\n            t.stop = moment().toDate()\n            if (description) t.description = description\n            this.setTask(name, t)\n        }\n    }\n\n    getTime(name) {\n        let t = this.getTask(name)\n        if (t.stop) {\n            return moment(t.stop).diff(moment(t.start), 'seconds')\n        } else {\n            return moment().diff(moment(t.start), 'seconds')\n        }\n    }\n\n    modifyTask(operation, name, stringTime){\n        let t = this.getTask(name)\n\n        if (t.stop){\n\n            let newStop = moment(t.stop)\n            let parsed = recognizeModifierTiming(stringTime)\n            parsed.map((t)=>{\n                newStop = newStop[operation](t.value, t.momentKey)\n            })\n\n            if (operation === 'subtract' && newStop.isBefore(t.start)){\n                console.error('You cant subtract more time')\n                return\n            }\n\n            t.stop = newStop\n            this.setTask(name, t)\n        }\n\n        return t.stop\n    }\n\n    search(string) {\n        let keys = Object.keys(this.tasks)\n        let tasks = []\n        keys.map((key)=>{\n            if (string === 'all' || key.indexOf(string) > -1){\n                tasks.push({\n                    name: key,\n                    task: this.tasks[key]\n                })\n            }\n        })\n        return tasks\n    }\n    getTasksJson() {\n        return flat.unflatten(this.tasks)\n    }\n}\n\nconst config = new Configstore(pkg.name, {tasks:{}})\n\nexport default new Manager(config)\n"]}